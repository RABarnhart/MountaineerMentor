# Text Loader progress for a future iteration
'''
    loader = TextLoader("data.txt")
    data = loader.load()

    text_splitter = RecursiveCharacterTextSplitter(
        chunk_size = 3500,
        chunk_overlap = 150
    )

    vector_data = text_splitter.split_documents(data)
    persist_directory = 'docs/chroma/'
    embedding = OpenAIEmbeddings(api_key=os.getenv('OPEN_AI_KEY'))
    vectordb = Chroma.from_documents(
        documents=vector_data,
        embedding=embedding,
        persist_directory=persist_directory
    )

    # add each message to the list
    chat_log.append({"role": "user", "content": message})

    docs_mmr = vectordb.max_marginal_relevance_search(message,k=3)
    docs_mmr[0].page_content[:100]
    docs_mmr[1].page_content[:100]

'''